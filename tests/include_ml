#use "topfind";;
#require "result,vector";;
#require "sandbox";;
open Core_ops ;;

let v = make [1;2;3;4;5;6];;
let ii = iter v;;
implicit module F = FilterIterator(IntVectorIterator) ;;
(*
let ii2 = filter (ii : F.I.t)  (fun x -> 0 = x mod 2);;
 *)
let ii2 = F.make ii (fun x -> 0 = x mod 2) ;;
implicit module M = MapIterator (TYPEint)(TYPEint)(F) ;;
let m = map ii2 (fun x -> x * 2 );;
implicit module IS = IteratorSum(M)(Ops_int);;
sum m ;;


(*
;;; Local Variables: ***
;;; mode:tuareg ***
;;; End: ***

*)
